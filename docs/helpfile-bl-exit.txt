  bunsen-exit
  ===========

  The default BunsenLabs bl-exit is now a script-based application using yad, and
  no configuration is possible, beyond changing the default icon theme.


  bunsen-exit-python
  ==================
  
  The package bunsen-exit-python, if installed instead of bunsen-exit, offers
  some customization of the exit dialogue interface. 
  
  NOTE: There are bugs in this legacy application, and not everything might
  work as expected.
  
  CONFIGURATION of the bl-exit dialog window:
  ------------------------------------------
  
  The installed bl-exit configuration is set by '/etc/bl-exit/bl-exitrc'

    WARNING:  Do not overwrite this file. It is a Debian conf file and 
    may be changed by the package manager when a new version of 
    bunsen-exit is released.
   
  A choice of gui styles is installed in '/etc/bl-exit/styles'.
  
  
  To configure your own bl-exit window and buttons, copy the installed files so you can edit them as $USER:
  
    mkdir -p ~/.config/bl-exit
  
    cp /etc/bl-exit/bl-exitrc ~/.config/bl-exit/
    
    cp -r /etc/bl-exit/styles ~/.config/bl-exit/
  
  
  BUTTON CONFIGURATION FOR bl-exit
  --------------------------------
  
  CASE:  Use only lowercase in the BUTTONS section
  
  It is possible to group configurations for several buttons by adding a  [default] section. 
  All buttons that do not have a specific section will take the show and onerror values from 
  this default section.
  
    "show" can take the values "always | never | maybe"
    
     maybe:
          The button will be shown and clickable when the action is possible. 
          When the action is not possible (e.g. suspend when no swap file is present)
          the button will be inactive.
       
    "onerror" can take the values "visual | novisual" for feedback on error.
  
  
  USING THE CLASSICAL STYLE
  -------------------------
  
  STYLE:  When the [style] section is not present or the combination of the values of 
  options 'dir' and 'rcfile' point to a non-existent file, the buttonbox will have the
  usual GTK buttons, and will take colors from the active gtk theme.
  
  EDIT:  To switch to the classic button layout, you can change the 'theme' entry in the 
    [theme] section to 'classic'.
  
    [style]
    dir = styles
    rcfile = none
    
    [theme]
    # set the theme
    theme = classic
      
  
  USING THE MODERN STYLE
  ----------------------
  
  ICONS:  Icon images are installed in '/usr/share/images/bunsen/exit/dark' and 
           '/usr/share/images/bunsen/exit/light'.
  
  There are large (100px) icons named eg. 'cancel.png', and small (60px) versions named eg. 'cancel-sm.png'.
  
  You can use your own images by placing them in a directory of your choice in your HOME directory. 
  We recommend ~/.local/share/bl-exit, but you are free to choose any directory you want.
  
  To activate those images, edit the 'iconpath' configuration option to:
  
     iconpath=~/.local/share/bl-exit:/usr/share/images/bunsen/exit/light
   
  This path is searched from left to right - just like PATH - to find your configured images.
  
  NOTE:  We install a "light" directory containing light icons for a dark theme
     and a 'dark' directory containing dark icons for a light theme.
     However, you are free to name your icon directory as you want and you can
     use any directory for any theme, by editing the 'iconpath' configuration
     option for that theme.
     
  THEMES:  Do not leave values empty - the script will fail.

     The height of the bl-exit window will not be displayed less than the icon height. 
     If the scale factor is set too small, the window will be set to the minimum required so
     that the icons do not overlap. If set too large it will be set to the screenwidth.
     There is a fallback size of 800px if the scale is 0 or negative.      
  
     #Overall height of the dialog.
     dialogHeight=px
    
     # windowWidthAdjustment - scale factor for window width ( 0 = default,800px;1 = full screen width)
     windowWidthAdjustment=0.5
  
  STYLES:  To use custom styles, you MUST
  
    - create a subdirectory in ~/.config/bl-exit
    - specify that subdirectory in entry 'dir' of section [style], ie "dir = styles"
    - specify the filename in entry 'rcfile' of section [style], ie "rcfile = name.rc"
    
    non-existing rcfile  --> use current GTK theme
    existing rcfile      --> use custom colors
    
  EXAMPLES: 
  
  1) Use the "Classic" gtk window buttons and colour style:
  
    [style]
    dir = styles
    rcfile = none
    
    [theme]
    # set the theme
    theme = classic
 
  2) Use the helium layout (small icons) and colour style:
  
    [style]
    dir = styles
    rcfile = helium.rc
    
    [theme]
    # set the theme
    theme = helium
    
  3) Use the light layout and gtk colours:
  
    [style]
    dir = styles
    rcfile = none
    
    [theme]
    # set the theme
    theme = light
